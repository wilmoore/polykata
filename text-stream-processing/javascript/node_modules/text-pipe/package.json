{
  "name": "text-pipe",
  "version": "0.1.0",
  "description": "Transform stream generators for stream driven data extract and transformation.",
  "main": "index.js",
  "scripts": {
    "test": "tape test.js | faucet"
  },
  "keywords": [
    "text",
    "streams",
    "stream",
    "extract",
    "etl",
    "transform",
    "transforms",
    "data-transformation",
    "text-processing",
    "processing"
  ],
  "author": {
    "name": "Wil Moore III",
    "email": "wil.moore@wilmoore.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/wilmoore/text-pipe"
  },
  "dependencies": {
    "through2-filter": "^1.4.0",
    "through2-map": "^1.4.0"
  },
  "devDependencies": {
    "faucet": "0.0.1",
    "split": "^0.3.0",
    "tape": "^3.0.1",
    "through": "^2.3.6"
  },
  "readme": "# text-pipe\n\n[![Build Status](http://img.shields.io/travis/wilmoore/text-pipe.svg)](https://travis-ci.org/wilmoore/text-pipe) [![NPM version](http://img.shields.io/npm/v/text-pipe.svg)](https://www.npmjs.org/package/text-pipe) [![NPM downloads](http://img.shields.io/npm/dm/text-pipe.svg)](https://www.npmjs.org/package/text-pipe) [![LICENSE](http://img.shields.io/npm/l/text-pipe.svg)](LICENSE)\n\n> Transform stream generators for stream driven data extract and transformation.\n\n    $ npm install text-pipe\n\n## Examples\n\n###### Extract Stackoverflow question IDs.\n\n    % node examples/extract-question-ids.js\n    26694200\n    26598084\n\n## API\n\n###### .map\n\n> aliases: .transform\n\nFor each value, return result of calling `transformer` function to given value.\n\n    var transform = map(function transformer(string) {\n      return /\\d+/.exec(string)[0];\n    });\n\n    stream.pipe(transform);\n\n###### .select\n\n> aliases: .filter, .keep\n\nFor each value, return only values that pass a truth test.\n\n    var transform = select(function (string) {\n      return /^question_id:/.exec(string);\n    });\n\n    stream.pipe(transform);\n\n## Depends on\n\n- [through2-filter]: You could use this directly if you want to write `{wantStrings: true}` boilerplate.\n- [through2-map]: You could use this directly if you want to write `{wantStrings: true}` boilerplate.\n- [through2]: You could use this directly if you want to write `write` and `end` boilerplate.\n\n## License\n\n  [MIT](LICENSE)\n\n[through2-filter]: https://www.npmjs.org/package/through2-filter\n[through2-map]: https://www.npmjs.org/package/through2-map\n[through2]: https://www.npmjs.org/package/through2\n\n",
  "readmeFilename": "readme.md",
  "gitHead": "0b2a7611e6b33b186549e5bc60aa17279eb9eeb7",
  "bugs": {
    "url": "https://github.com/wilmoore/text-pipe/issues"
  },
  "homepage": "https://github.com/wilmoore/text-pipe",
  "_id": "text-pipe@0.1.0",
  "_shasum": "df0437251b5b0bab3203d1c1ea2d405947e08dda",
  "_from": "text-pipe@*"
}
